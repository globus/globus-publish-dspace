# These values may be changed on a per installation basis depending on how
# a particular instance of Publish will interact with Globus

# The base URL to access when calling out to the Globus Transfer Page
globus.url=https://www.globus.org

# Base API URLs for calls to nexus and transfer
nexus.api=https://nexus.api.globusonline.org
globus.auth.url=https://auth.globus.org
transfer.api=https://transfer.api.globusonline.org/v0.10
group.api=https://auth.globus.org/v2/api
identity.api=https://nexus.api.globusonline.org
globus.datasearch.url=https://datasearch.api.demo.globus.org/v1

# The path to the Globus Start transfer page
transfer.url=/app/transfer

# The path to the Globus Group selection page
groups.url=/SelectGroup

# The Globus logout resource
globus.logout.url=/v2/web/logout

# This is a group id in Globus of users who will be able to administer
# this instance of Publish
# This group must be owned by the user defined in globus-auth.cfg as the
# publish superuser
# <globus GroupId of group of users who can administer this system>
admingroup={{publish.admin_group}}

# The directory to store publication data. This shouldn't change to remain consistent with the 
# BagIt standard
publication.data.directory=data

# The top-level directory where submissions are stored during
# the publication workflow
globus.inprogress.directory = unpublished

# The top-level directory where completed, archived submissions are stored
globus.completed.directory = published

# The name of the leaf directory where publication data is stored
globus.publication.dir.prefix = publication_

# This is the artifact filename
artifact.file.name=globus_metadata.json

# Whether to use local file system or s3 storage for staging of artifact files
# If left blank then default is s3
# Either way you need a GCS endpoint set up for transfer out of the artifact files
# staging.method=[local|s3]

# Vars for local staging only
staging.local_path={{globus.staging_local_path}}
staging.local_endpoint={{globus.staging_local_endpoint}}
staging.local_endpoint_path={{globus.staging_local_endpoint_path}}

# This is the S3 bucket used for staging artifact files
s3.bucket={{globus.s3_bucket}}

# This is the S3 endpoint name used for staging artifact files
s3.endpoint={{globus.s3_endpoint}}

# Use instance group for S3 authentication
aws.instance.group.auth={{aws.instance_group_auth}}

# This is the AWS acccess key. It is only required if we are not using
# security groups and policies to control access
aws.access.key.id={{aws.access_key_id}}

# This is the AWS secret key. It is only required if we are not using
# security groups and policies to control access
aws.secret.access.key={{aws.secret_key}}

########
# Server identity is one byte and it should be unique on every running instance to avoid
# collisions on identifier creation
########
globus.server-id = {{publish.server_id}}

#######
# Amount of time in seconds to wait for a transfer to complete 
# Used when waiting for artifact file to be created
######
globus.transfer.wait.time={{globus.transfer_wait_time}}

#######
# Directories where form and workflow definition files will be found
# Typically will be under the ${dspace.dir}/config directory
#######

globus.forms.dir = ${dspace.dir}/config/forms
globus.workflows.dir =  ${dspace.dir}/config/workflows
globus.metadata.mapping = ${dspace.dir}/config/metadata_mapping.map
#####
# Default value for the sharing directory
#####

globus.default.sharepath = /

#######
# Banner displayed on collection configuration page
#######

# Sample text for trial:
# globus.collection.banner.msg = Data on this service will be deleted periodically. Do not configure identifiers intended to be long-lived (e.g. DOIs).
# Sample text for production:
# globus.collection.banner.msg = Datasets stored on this service are intended to be persistent. Do not submit test data to this service and use storage and identifier configurations which are durable.

publish.collection_banner_msg = {{publish.collection_banner_msg}}

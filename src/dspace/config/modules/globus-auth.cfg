# How shall we authenticate the privledged user
# Values are: client_creds, username_pw, stored_token
globus.priv_auth.method = username_pw


# Place the Globus username of the publish system superuser here
# It should be of the form username@globusid.org
username={{publish.globus_username}}

# Password for the above user
password={{publish.globus_password}}

# Provide a token that can be used to
# access the Globus account of the publish superuser. Note that tokens
# can expire, so any value here may need to be updated
# Deprecated in favor of 2-Legged OAuth using username and password
# token={{publish.globus_auth_token}}

# base64 encoding of client_id:client_secret
globus.client.base64.creds={{publish.globus_user_creds}}

# Globus OAuth settings
globus.client.id={{publish.globus_client.id}}
globus.client.secret={{publish.globus_client.secret}}
globus.auth.scope=urn:globus:auth:scope:auth.globus.org:view_identities urn:globus:auth:scope:nexus.api.globus.org:groups urn:globus:auth:scope:transfer.api.globus.org:all urn:globus:auth:scope:search.api.globus.org:all https://auth.globus.org/scopes/identifiers.globus.org/create_update
globus.user.scope=741b8d79-53b6-4906-bddf-961d605b1fd7

# Globus OAuth paths
globus.oauth.url={{publish.globus.oauth}}
globus.auth.path=/oauth2/authorize
globus.token.path=/oauth2/token
globus.token.introspect.path=/oauth2/token/introspect

# For the REST API
globus.api.client.base64.creds={{rest.api.base64.creds}}
